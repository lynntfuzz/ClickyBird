{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","handleClickEvent","id","alt","name","src","image","occupation","selected","Wrapper","children","Title","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffle","array","t","i","m","length","Math","floor","random","resetDeck","friends","resetData","map","item","objectSpread","clickedFriend","state","find","friend","console","log","setState","score","topscore","_this2","components_Wrapper","components_Title","components_FriendCard","removeFriend","key","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0f8d802.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.handleClickEvent(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Species:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Selected:</strong> {props.selected ? \"True\" : \"False\"}\n          </li>\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./birds.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n   \n    this.state = {\n      score: 0,\n      topscore: 0,\n      friends: friends                 \n    };\n   \n  }\n\n  shuffle = array => {\n     let m = array.length, t, i;\n  \n    // While there remain elements to shuffle…\n    while (m) {\n  \n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--);\n  \n      // And swap it with the current element.\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n  \n    return array;\n  };\n\n  resetDeck = friends => {\n    const resetData = friends.map(item => ({ ...item, selected: false }));\n\n    return this.shuffle(resetData);\n  };\n\n  // componentDidMount() {\n  // }\n\n  incrementCounter() {\n    this.setState({score: this.state.score + 1});\n  }\n\n  decrementCounter() {\n    this.setState({score: this.state.score - 1});\n  }\n\n  handleClickEvent = id => {\n    \n    let clickedFriend = this.state.friends.find(friend => friend.id === id);\n    console.log(\"Clicky Click: \" + id + \" \" + clickedFriend.name + \" \" + clickedFriend.selected);\n    if (!clickedFriend.selected) {\n      console.log(\"Clicked on \" + clickedFriend.name + \" not selected yet\");\n      clickedFriend.selected = true;\n      this.setState( {score: this.state.score + 1, friends: this.shuffle(this.state.friends)});\n    } else {\n      console.log(\"yikes\");\n      this.setState( {\n        score: 0, \n        friends: this.resetDeck(this.shuffle(this.state.friends)),\n        topscore: this.state.score > this.state.topscore? this.state.score : this.state.topscore\n      });\n    }\n      \n  };\n\n  // Map over this.state.cards and render a FriendCard component for each card object\n  render() {\n \n    return (\n      <Wrapper>\n        <Title>Bird Memory Game </Title>\n        <Title>Score: {this.state.score} Top Score: {this.state.topscore}</Title>\n        \n        {this.state.friends.map(friend => (\n          \n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            selected={friend.selected}\n            handleClickEvent={this.handleClickEvent}\n          />\n        ))}\n        \n      </Wrapper>\n    );\n};\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}